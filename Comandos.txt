2. Create 3 Tablespaces (0.2) :
a. first one with 1 Gb and 3 datafiles, tablespace should be named "hospital_bills"

CREATE TABLESPACE hospital_bills DATAFILE 
'C:\Users\crist\Pictures\TrabajoBD\datafile1.DBF' SIZE 512M,
'C:\Users\crist\Pictures\TrabajoBD\datafile1.DBF' SIZE 256M,
'C:\Users\crist\Pictures\TrabajoBD\datafile1.DBF' SIZE 256M,

b. second one with 500 Mb and 1 datafile, named "test_purposes".

TABLESPACE test_purposes
CREATE TABLESPACE test_purposes DATAFILE 
'C:\Users\crist\Pictures\TrabajoBD\datafile4.DBF' SIZE 500M;

c. Undo tablespace with 5Mb of space and 1 datafile

--UNDO TABLESPACE
CREATE UNDO TABLESPACE UNDOTBSPACE DATAFILE 
'C:\Users\crist\Pictures\TrabajoBD\undotbspace1.DBF' SIZE 5M;

--Consultar TABLESPACES
SELECT * FROM SYS.DBA_TABLESPACES;

3. Set the undo tablespace to be used in the system (0.2)

Modifica el TABLESPACE para usarlo en SYSTEM
ALTER SYSTEM SET UNDO_TABLESPACE = UNDOTBSPACE;

4. Create a DBA user and assign it to the tablespace called "hospital_bills", this user has unlimited space
on the tablespace (0.2)

CREATE USER DBA_CRISTIANDAVID
IDENTIFIED BY CristianDavid
DEFAULT TABLESPACE hospital_bills
QUOTA unlimited on hospital_bills

Consultar usuarios
SELECT * FROM SYS.DBA_USERS;

5. Assign the dba role and permissions to connect to the user just created (0.2)

GRANT DBA TO DBA_CRISTIANDAVID
GRANT CREATE SESSION TO DBA_CRISTIANDAVID

6. Create 3 profiles. (0.2)

a. Profile 1: "manager " password life 40 days, one session per user, 15 minutes idle, 4 failed
login attempts

CREATE PROFILE manager LIMIT
PASSWORD_LIFE_TIME              40
SESSIONS_PER_USER               1
IDLE_TIME                       15
FAILED_LOGIN_ATTEMPTS           4;

b. Profile 2: "finance " password life 15 days, one session per user, 3 minutes idle, 2 failed login
attempts

CREATE PROFILE finance LIMIT
PASSWORD_LIFE_TIME              15
SESSIONS_PER_USER               1
IDLE_TIME                       3
FAILED_LOGIN_ATTEMPTS           2;

c. Profile 3: "development " password life 100 days, two session per user, 30 minutes idle, no
failed login attempts

CREATE PROFILE development LIMIT
PASSWORD_LIFE_TIME              100
SESSIONS_PER_USER               2
IDLE_TIME                       30
FAILED_LOGIN_ATTEMPTS           UNLIMITED;

7. Create 4 users, assign them the tablespace "hospital_bills"; profiles created should be used for the
users, all the users should be allow to connect to the database. (0.2)

Consultar usuarios
SELECT * FROM SYS.DBA_USERS;

CREATE USER USER1
IDENTIFIED BY user1
DEFAULT tablespace hospital_bills
PROFILE manager;

CREATE USER USER2
IDENTIFIED BY user2
DEFAULT tablespace hospital_bills
PROFILE finance;

CREATE USER USER3
IDENTIFIED BY user3
DEFAULT tablespace hospital_bills
PROFILE development;

CREATE USER USER4
IDENTIFIED BY user4
DEFAULT tablespace hospital_bills
PROFILE development;

--all the users should be allow to connect to the database
GRANT CREATE SESSION TO USER1, USER2, USER3, USER4;


8. Lock the users associate with profiles: manager and finance . (0.2)

ALTER USER USER1 ACCOUNT LOCK;
ALTER USER USER2 ACCOUNT LOCK;

--Consultar usuarios
SELECT * FROM SYS.DBA_USERS;

9. Delete the tablespace called "test_purposes " (0.2)

Eliminar únicamente el TABLESPACE 'test_purposes' 
DROP TABLESPACE test_purposes; 

Eliminar el TABLESPACE con el contenido y DATAFILES
DROP TABLESPACE test_purposes 
INCLUDING CONTENTS AND DATAFILES;

10. Create tables with its columns according to your normalization. Create sequences for every primary
key. Create primary and foreign keys. Insert at least 10 patients, 5 cost centers, items for each cost
center (2 or 3) (Go to http://www.generatedata.com/). This should be a functional single script (.sql)
(Better if you generate sql through sql developer) (1.0)




11. Create a backup through RMAN and take a screenshot of the list of backups in the console. Add the
image to git. (0.4)



